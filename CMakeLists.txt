# 
# Warning! CMakeLists.txt is generated by Keg. All changes you make to this file
# will be overwritten.
# 
if ((DEFINED KEG_CMAKE_LISTS) AND (NOT KEG_CMAKE_LISTS STREQUAL "CMakeLists.txt"))
    include(${KEG_CMAKE_LISTS})
    return()
endif()
cmake_minimum_required(
    VERSION 3.0.0
)
project(
    kmnd
    VERSION 0.0.1
)
include(ExternalProject)
# 
# Library kmnd
# 
if (NOT TARGET kmnd)
    add_library(kmnd
        "src/command.c"
        "src/error.c"
        "src/input.c"
        "src/kmnd.c"
        "src/log.c"
        "src/option.c"
        "src/path.c"
        "src/terminal.c"
        "src/usage.c"
        "src/command.h"
        "src/core.h"
        "src/error.h"
        "src/input.h"
        "src/option.h"
        "src/path.h"
        "src/terminal.h"
        "src/usage.h"
    )
    target_include_directories(
        kmnd
        PUBLIC
        include
    )
endif()
if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    # 
    # Executable check
    # 
    if (NOT TARGET check)
        add_executable(check EXCLUDE_FROM_ALL
            "tests/src/command.cpp"
            "tests/src/error.cpp"
            "tests/src/input.cpp"
            "tests/src/option_boolean.cpp"
            "tests/src/option_double.cpp"
            "tests/src/option_float.cpp"
            "tests/src/option_int16.cpp"
            "tests/src/option_int32.cpp"
            "tests/src/option_int64.cpp"
            "tests/src/option_int8.cpp"
            "tests/src/option_string.cpp"
            "tests/src/option_uint16.cpp"
            "tests/src/option_uint32.cpp"
            "tests/src/option_uint64.cpp"
            "tests/src/option_uint8.cpp"
            "tests/src/path.cpp"
            "tests/src/terminal.cpp"
            "tests/src/usage.cpp"
        )
        target_include_directories(
            check
            PUBLIC
            include
        )
        get_property(
            TARGET_INCLUDE_DIRECTORIES
            TARGET
            kmnd
            PROPERTY
            INTERFACE_INCLUDE_DIRECTORIES
        )
        target_include_directories(
            check
            PRIVATE
            ${TARGET_INCLUDE_DIRECTORIES}
        )
        get_property(
            TARGET_LINK_LIBRARIES
            TARGET
            kmnd
            PROPERTY
            INTERFACE_LINK_LIBRARIES
        )
        target_link_libraries(
            check
            ${TARGET_LINK_LIBRARIES}
        )
        target_link_libraries(
            check
            kmnd
        )
        if (NOT TARGET googletest)
            ExternalProject_add(googletest
                EXCLUDE_FROM_ALL 1
                UPDATE_COMMAND ""
                GIT_REPOSITORY "https://github.com/google/googletest"
                INSTALL_COMMAND ""
            )
            ExternalProject_Add_Step(googletest keg-install
                COMMAND 
                WORKING_DIRECTORY <SOURCE_DIR>
                DEPENDEES build
            )
        endif()
        ExternalProject_Get_Property(
            googletest
            BINARY_DIR
        )
        ExternalProject_Get_Property(
            googletest
            SOURCE_DIR
        )
        string(CONFIGURE "${BINARY_DIR}/googlemock/gtest/libgtest.a" LIBRARY_PATH @ONLY)
        target_link_libraries(
            check
            ${LIBRARY_PATH}
        )
        string(CONFIGURE "${BINARY_DIR}/googlemock/gtest/libgtest_main.a" LIBRARY_PATH @ONLY)
        target_link_libraries(
            check
            ${LIBRARY_PATH}
        )
        string(CONFIGURE "${SOURCE_DIR}/googletest/include" INCLUDE_PATH @ONLY)
        target_include_directories(
            check
            PUBLIC
            ${INCLUDE_PATH}
        )
        add_dependencies(
            check
            googletest
        )
        target_link_libraries(
            check
            pthread
        )
        target_link_libraries(
            check
            dl
        )
    endif()
endif()
